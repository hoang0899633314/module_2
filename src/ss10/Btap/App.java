package ss10.Btap;

import java.util.Scanner;

public class App {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        PhoneManager manager = new PhoneManager();
        manager.loadFromFile();

        while (true) {
            System.out.println("\n===== CH∆Ø∆†NG TR√åNH QU·∫¢N L√ù ƒêI·ªÜN THO·∫†I =====");
            System.out.println("1. Th√™m ƒëi·ªán tho·∫°i m·ªõi");
            System.out.println("2. Xem danh s√°ch ƒëi·ªán tho·∫°i");
            System.out.println("3. X√≥a ƒëi·ªán tho·∫°i theo ID");
            System.out.println("4. T√¨m ƒëi·ªán tho·∫°i theo ID");
            System.out.println("5. L∆∞u d·ªØ li·ªáu ra file");
            System.out.println("0. Tho√°t");
            System.out.print("üëâ Ch·ªçn ch·ª©c nƒÉng: ");

            int choice = sc.nextInt();
            sc.nextLine();

            try {
                switch (choice) {
                    case 1:
                        System.out.println("1. Th√™m ƒêi·ªán tho·∫°i M·ªõi");
                        System.out.println("2. Th√™m ƒêi·ªán tho·∫°i C≈©");
                        System.out.print("üëâ Ch·ªçn lo·∫°i: ");
                        int type = sc.nextInt();
                        sc.nextLine();

                        System.out.print("Nh·∫≠p m√£ ID: ");
                        String id = sc.nextLine();
                        manager.validateField(id, "ID");

                        System.out.print("Nh·∫≠p T√™n ƒëi·ªán tho·∫°i: ");
                        String name = sc.nextLine();
                        manager.validateField(name, "T√™n");

                        System.out.print("Nh·∫≠p Gi√° b√°n: ");
                        double price;
                        try {
                            price = Double.parseDouble(sc.nextLine());
                            manager.validatePrice(price);
                        } catch (NumberFormatException e) {
                            System.out.println("‚ùå Gi√° b√°n ph·∫£i l√† s·ªë!");
                            continue; // quay l·∫°i menu
                        }


                        if (type == 1) {
                            System.out.print("Nh·∫≠p Th·ªùi gian b·∫£o h√†nh (th√°ng): ");
                            int warranty;
                            try {
                                warranty = Integer.parseInt(sc.nextLine());
                            } catch (NumberFormatException e) {
                                System.out.println("‚ùå Th·ªùi gian b·∫£o h√†nh ph·∫£i l√† s·ªë nguy√™n!");
                                continue;
                            }

                            sc.nextLine();
                            manager.addPhone(new NewPhone(id, name, price, warranty));
                        } else {
                            System.out.print("Nh·∫≠p T√¨nh tr·∫°ng (m√¥ t·∫£): ");
                            String condition = sc.nextLine();
                            manager.validateField(condition, "T√¨nh tr·∫°ng");
                            manager.addPhone(new OldPhone(id, name, price, condition));
                        }
                        break;

                    case 2:
                        System.out.println("üìã DANH S√ÅCH ƒêI·ªÜN THO·∫†I:");
                        manager.showAll();
                        break;

                    case 3:
                        System.out.print("Nh·∫≠p ID c·∫ßn x√≥a: ");
                        String delId = sc.nextLine();
                        manager.deleteById(delId);
                        break;

                    case 4:
                        System.out.print("Nh·∫≠p ID c·∫ßn t√¨m: ");
                        String findId = sc.nextLine();
                        Phone found = manager.findById(findId);
                        if (found != null) {
                            System.out.println("üîé T√¨m th·∫•y: " + found);
                        } else {
                            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y!");
                        }
                        break;

                    case 5:
                        manager.saveToFile();
                        break;

                    case 0:
                        System.out.println("üëã Tho√°t ch∆∞∆°ng tr√¨nh...");
                        manager.saveToFile();
                        return;

                    default:
                        System.out.println("‚ö† L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá, vui l√≤ng nh·∫≠p l·∫°i!");
                }
            } catch (aaa.EmptyFieldException | aaa.MinLengthException | aaa.NegativeNumberException e) {
                System.out.println("‚ùå L·ªói: " + e.getMessage());
            }
        }
    }
}
